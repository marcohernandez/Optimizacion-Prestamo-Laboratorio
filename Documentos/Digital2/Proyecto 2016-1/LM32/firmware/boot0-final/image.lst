
image:     formato del fichero elf32-lm32

Secciones:
Ind Nombre        Tamaño    VMA       LMA       Desp fich Alin
  0 .text         00000708  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .rodata       000001c0  00000708  00000708  0000075c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000010  000008c8  000008c8  0000091c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000004  000008d8  000008d8  0000092c  2**2
                  ALLOC
  4 .debug_abbrev 0000022e  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000634  00000000  00000000  00000b5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000600  00000000  00000000  0000118e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000110  00000000  00000000  00001790  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000050c  00000000  00000000  000018a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00000134  00000000  00000000  00001dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000006c  00000000  00000000  00001ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000040  00000000  00000000  00001f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00000245  00000000  00000000  00001fac  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      00000011  00000000  00000000  000021f1  2**0
                  CONTENTS, READONLY

Desensamblado de la sección .text:

00000000 <_ftext>:
   0:	98 00 00 00 	xor r0,r0,r0
   4:	d0 00 00 00 	wcsr IE,r0
   8:	78 01 00 00 	mvhi r1,0x0
   c:	38 21 00 00 	ori r1,r1,0x0
  10:	d0 e1 00 00 	wcsr EBA,r1
  14:	f8 00 00 03 	calli 20 <_crt0>
  18:	34 00 00 00 	nop
  1c:	34 00 00 00 	nop

00000020 <_crt0>:
  20:	78 1c 00 00 	mvhi sp,0x0
  24:	3b 9c 0f fc 	ori sp,sp,0xffc
  28:	78 1a 00 00 	mvhi gp,0x0
  2c:	3b 5a 08 e0 	ori gp,gp,0x8e0
  30:	78 01 00 00 	mvhi r1,0x0
  34:	38 21 08 d8 	ori r1,r1,0x8d8
  38:	78 03 00 00 	mvhi r3,0x0
  3c:	38 63 08 dc 	ori r3,r3,0x8dc

00000040 <.clearBSS>:
  40:	44 23 00 04 	be r1,r3,50 <.callMain>
  44:	58 20 00 00 	sw (r1+0),r0
  48:	34 21 00 04 	addi r1,r1,4
  4c:	e3 ff ff fd 	bi 40 <.clearBSS>

00000050 <.callMain>:
  50:	34 01 00 00 	mvi r1,0
  54:	34 02 00 00 	mvi r2,0
  58:	34 03 00 00 	mvi r3,0
  5c:	f8 00 00 fb 	calli 448 <main>

00000060 <irq_enable>:
  60:	34 01 00 01 	mvi r1,1
  64:	d0 01 00 00 	wcsr IE,r1
  68:	c3 a0 00 00 	ret

0000006c <irq_mask>:
  6c:	34 01 00 0f 	mvi r1,15
  70:	d0 21 00 00 	wcsr IM,r1
  74:	c3 a0 00 00 	ret

00000078 <irq_disable>:
  78:	34 01 00 00 	mvi r1,0
  7c:	d0 01 00 00 	wcsr IE,r1
  80:	c3 a0 00 00 	ret

00000084 <jump>:
  84:	c0 20 00 00 	b r1

00000088 <halt>:
  88:	e0 00 00 00 	bi 88 <halt>

0000008c <key_read>:
#include "soc-hw.h"


uint32_t key_read(){
  8c:	37 9c ff cc 	addi sp,sp,-52
  90:	5b 8b 00 34 	sw (sp+52),r11
  94:	5b 8c 00 30 	sw (sp+48),r12
  98:	5b 8d 00 2c 	sw (sp+44),r13
  9c:	5b 8e 00 28 	sw (sp+40),r14
  a0:	5b 8f 00 24 	sw (sp+36),r15
  a4:	5b 90 00 20 	sw (sp+32),r16
  a8:	5b 91 00 1c 	sw (sp+28),r17
  ac:	5b 92 00 18 	sw (sp+24),r18
  b0:	5b 93 00 14 	sw (sp+20),r19
  b4:	5b 94 00 10 	sw (sp+16),r20
  b8:	5b 95 00 0c 	sw (sp+12),r21
  bc:	5b 96 00 08 	sw (sp+8),r22
  c0:	5b 9d 00 04 	sw (sp+4),ra
	int temp7 = 0;
	int temp8 = 0;

	int i = 2;

	for(i=2; i>1; i++){
  c4:	34 11 00 02 	mvi r17,2
	

	int bandera1 = 0;
	int bandera2 = 0;
	int bandera3 = 0;
	int bandera4 = 0;
  c8:	34 0d 00 00 	mvi r13,0
	uint32_t clave = 0;
	

	int bandera1 = 0;
	int bandera2 = 0;
	int bandera3 = 0;
  cc:	34 0f 00 00 	mvi r15,0
	uint32_t dato = 0;
	uint32_t clave = 0;
	

	int bandera1 = 0;
	int bandera2 = 0;
  d0:	34 0e 00 00 	mvi r14,0
	int case2 = 1;
	uint32_t dato = 0;
	uint32_t clave = 0;
	

	int bandera1 = 0;
  d4:	34 0c 00 00 	mvi r12,0
uint32_t key_read(){

	int case1 = 1;
	int case2 = 1;
	uint32_t dato = 0;
	uint32_t clave = 0;
  d8:	34 15 00 00 	mvi r21,0

uint32_t key_read(){

	int case1 = 1;
	int case2 = 1;
	uint32_t dato = 0;
  dc:	34 12 00 00 	mvi r18,0
#include "soc-hw.h"


uint32_t key_read(){

	int case1 = 1;
  e0:	34 0b 00 01 	mvi r11,1
		temp1 = bandera1;
		temp2 = bandera2;
		temp3 = bandera3;
		temp4 = bandera4;
		
		switch (case1){
  e4:	34 10 00 02 	mvi r16,2
		temp8 = bandera4;

 if ((temp1 == 0 && temp5 == 0)||(temp1 == 1 && temp5 == 1)||(temp2 == 0 && temp6 == 0)||(temp2 == 1 && temp6 == 1)||(temp3 == 0 && temp7 == 0)||(temp3 == 1 && temp7 == 1)||(temp4 == 0 && temp8 == 0)||(temp4 == 1 && temp8 == 1)){

                                                                                        }
   if((temp1 == 0 && temp5 == 1)||(temp2 == 0 && temp6 == 1)||(temp3 == 0 && temp7 == 1)||(temp4 == 0 && temp8 == 1)){
  e8:	34 14 00 01 	mvi r20,1
							break;
				}
				break;
    			case 2: write_fila(2);
				case2 = read_columna();
				switch (case2){
  ec:	34 13 00 04 	mvi r19,4
		temp1 = bandera1;
		temp2 = bandera2;
		temp3 = bandera3;
		temp4 = bandera4;
		
		switch (case1){
  f0:	34 16 00 03 	mvi r22,3

	for(i=2; i>1; i++){
//==========================================================================================//
//=============================== key matricial ============================================//

		sleep(100);
  f4:	34 01 00 64 	mvi r1,100
  f8:	f8 00 01 1c 	calli 568 <sleep>
		temp1 = bandera1;
		temp2 = bandera2;
		temp3 = bandera3;
		temp4 = bandera4;
		
		switch (case1){
  fc:	45 70 00 5f 	be r11,r16,278 <key_read+0x1ec>
 100:	49 70 00 3b 	bg r11,r16,1ec <key_read+0x160>
 104:	45 74 00 52 	be r11,r20,24c <key_read+0x1c0>
					default:	dato = dato;
							bandera4 = 0;
							break;
				}
				break;
			default:	write_fila(0);
 108:	34 01 00 00 	mvi r1,0
 10c:	f8 00 01 44 	calli 61c <write_fila>
 110:	21 86 00 ff 	andi r6,r12,0xff
					break;
 114:	b9 a0 20 00 	mv r4,r13
 118:	b9 e0 18 00 	mv r3,r15
 11c:	b9 c0 10 00 	mv r2,r14
 120:	b9 80 28 00 	mv r5,r12
		temp8 = bandera4;

 if ((temp1 == 0 && temp5 == 0)||(temp1 == 1 && temp5 == 1)||(temp2 == 0 && temp6 == 0)||(temp2 == 1 && temp6 == 1)||(temp3 == 0 && temp7 == 0)||(temp3 == 1 && temp7 == 1)||(temp4 == 0 && temp8 == 0)||(temp4 == 1 && temp8 == 1)){

                                                                                        }
   if((temp1 == 0 && temp5 == 1)||(temp2 == 0 && temp6 == 1)||(temp3 == 0 && temp7 == 1)||(temp4 == 0 && temp8 == 1)){
 124:	65 8c 00 00 	cmpei r12,r12,0
 128:	a0 cc 30 00 	and r6,r6,r12
 12c:	5c c0 00 26 	bne r6,r0,1c4 <key_read+0x138>
 130:	64 41 00 01 	cmpei r1,r2,1
 134:	65 ce 00 00 	cmpei r14,r14,0
 138:	a0 2e 70 00 	and r14,r1,r14
 13c:	5d c0 00 3c 	bne r14,r0,22c <key_read+0x1a0>
 140:	64 61 00 01 	cmpei r1,r3,1
 144:	65 ef 00 00 	cmpei r15,r15,0
 148:	a0 2f 78 00 	and r15,r1,r15
 14c:	5d ee 00 63 	bne r15,r14,2d8 <key_read+0x24c>
 150:	64 81 00 01 	cmpei r1,r4,1
 154:	65 ad 00 00 	cmpei r13,r13,0
 158:	a0 2d 68 00 	and r13,r1,r13
 15c:	5d af 00 19 	bne r13,r15,1c0 <key_read+0x134>
 160:	36 31 00 01 	addi r17,r17,1
 164:	b8 80 68 00 	mv r13,r4
 168:	b8 60 78 00 	mv r15,r3
 16c:	b8 40 70 00 	mv r14,r2
 170:	b8 a0 60 00 	mv r12,r5
			clave = dato;
				i = 0;
					
		}		

		if (case1 == 4){
 174:	45 73 00 1b 	be r11,r19,1e0 <key_read+0x154>
 178:	35 6b 00 01 	addi r11,r11,1
	int temp7 = 0;
	int temp8 = 0;

	int i = 2;

	for(i=2; i>1; i++){
 17c:	5e 34 ff de 	bne r17,r20,f4 <key_read+0x68>
		}

		case1 = case1 + 1;
	}
	return clave;
}
 180:	ba a0 08 00 	mv r1,r21
 184:	2b 9d 00 04 	lw ra,(sp+4)
 188:	2b 8b 00 34 	lw r11,(sp+52)
 18c:	2b 8c 00 30 	lw r12,(sp+48)
 190:	2b 8d 00 2c 	lw r13,(sp+44)
 194:	2b 8e 00 28 	lw r14,(sp+40)
 198:	2b 8f 00 24 	lw r15,(sp+36)
 19c:	2b 90 00 20 	lw r16,(sp+32)
 1a0:	2b 91 00 1c 	lw r17,(sp+28)
 1a4:	2b 92 00 18 	lw r18,(sp+24)
 1a8:	2b 93 00 14 	lw r19,(sp+20)
 1ac:	2b 94 00 10 	lw r20,(sp+16)
 1b0:	2b 95 00 0c 	lw r21,(sp+12)
 1b4:	2b 96 00 08 	lw r22,(sp+8)
 1b8:	37 9c 00 34 	addi sp,sp,52
 1bc:	c3 a0 00 00 	ret
		temp8 = bandera4;

 if ((temp1 == 0 && temp5 == 0)||(temp1 == 1 && temp5 == 1)||(temp2 == 0 && temp6 == 0)||(temp2 == 1 && temp6 == 1)||(temp3 == 0 && temp7 == 0)||(temp3 == 1 && temp7 == 1)||(temp4 == 0 && temp8 == 0)||(temp4 == 1 && temp8 == 1)){

                                                                                        }
   if((temp1 == 0 && temp5 == 1)||(temp2 == 0 && temp6 == 1)||(temp3 == 0 && temp7 == 1)||(temp4 == 0 && temp8 == 1)){
 1c0:	34 04 00 01 	mvi r4,1
 1c4:	b8 80 68 00 	mv r13,r4
 1c8:	b8 60 78 00 	mv r15,r3
 1cc:	b8 40 70 00 	mv r14,r2
 1d0:	b8 a0 60 00 	mv r12,r5
 1d4:	ba 40 a8 00 	mv r21,r18
 1d8:	34 11 00 01 	mvi r17,1
			clave = dato;
				i = 0;
					
		}		

		if (case1 == 4){
 1dc:	5d 73 ff e7 	bne r11,r19,178 <key_read+0xec>
 1e0:	34 0b 00 01 	mvi r11,1
	int temp7 = 0;
	int temp8 = 0;

	int i = 2;

	for(i=2; i>1; i++){
 1e4:	5e 34 ff c4 	bne r17,r20,f4 <key_read+0x68>
 1e8:	e3 ff ff e6 	bi 180 <key_read+0xf4>
		temp1 = bandera1;
		temp2 = bandera2;
		temp3 = bandera3;
		temp4 = bandera4;
		
		switch (case1){
 1ec:	45 76 00 2f 	be r11,r22,2a8 <key_read+0x21c>
 1f0:	5d 73 ff c6 	bne r11,r19,108 <key_read+0x7c>
					default:	dato = dato;
							bandera3 = 0;
							break;
				}
				break;
    			case 4:	write_fila(8);
 1f4:	34 01 00 08 	mvi r1,8
 1f8:	f8 00 01 09 	calli 61c <write_fila>
				case2 = read_columna();
 1fc:	f8 00 01 01 	calli 600 <read_columna>
				switch (case2){
 200:	54 2b 00 3e 	bgu r1,r11,2f8 <key_read+0x26c>
 204:	be 81 08 00 	sl r1,r20,r1
 208:	20 21 00 16 	andi r1,r1,0x16
 20c:	44 20 00 3b 	be r1,r0,2f8 <key_read+0x26c>
 210:	21 86 00 ff 	andi r6,r12,0xff
 214:	b9 e0 18 00 	mv r3,r15
 218:	b9 c0 10 00 	mv r2,r14
 21c:	b9 80 28 00 	mv r5,r12
	    				case 1:	dato = 0;
						bandera4 = 1;
 220:	34 04 00 01 	mvi r4,1
				}
				break;
    			case 4:	write_fila(8);
				case2 = read_columna();
				switch (case2){
	    				case 1:	dato = 0;
 224:	34 12 00 00 	mvi r18,0
 228:	e3 ff ff bf 	bi 124 <key_read+0x98>
		temp8 = bandera4;

 if ((temp1 == 0 && temp5 == 0)||(temp1 == 1 && temp5 == 1)||(temp2 == 0 && temp6 == 0)||(temp2 == 1 && temp6 == 1)||(temp3 == 0 && temp7 == 0)||(temp3 == 1 && temp7 == 1)||(temp4 == 0 && temp8 == 0)||(temp4 == 1 && temp8 == 1)){

                                                                                        }
   if((temp1 == 0 && temp5 == 1)||(temp2 == 0 && temp6 == 1)||(temp3 == 0 && temp7 == 1)||(temp4 == 0 && temp8 == 1)){
 22c:	34 02 00 01 	mvi r2,1
 230:	b8 80 68 00 	mv r13,r4
 234:	b8 60 78 00 	mv r15,r3
 238:	b8 40 70 00 	mv r14,r2
 23c:	b8 a0 60 00 	mv r12,r5
 240:	ba 40 a8 00 	mv r21,r18
 244:	34 11 00 01 	mvi r17,1
 248:	e3 ff ff e5 	bi 1dc <key_read+0x150>
		temp2 = bandera2;
		temp3 = bandera3;
		temp4 = bandera4;
		
		switch (case1){
    			case 1:	write_fila(1);
 24c:	34 01 00 01 	mvi r1,1
 250:	f8 00 00 f3 	calli 61c <write_fila>
				case2 = read_columna();
 254:	f8 00 00 eb 	calli 600 <read_columna>
				switch (case2){
 258:	44 30 00 4a 	be r1,r16,380 <key_read+0x2f4>
 25c:	44 33 00 42 	be r1,r19,364 <key_read+0x2d8>
 260:	44 2b 00 2c 	be r1,r11,310 <key_read+0x284>
 264:	b9 a0 20 00 	mv r4,r13
 268:	b9 e0 18 00 	mv r3,r15
 26c:	b9 c0 10 00 	mv r2,r14
			    		case 4:	dato = 3;
						bandera1 = 1;
						break;
		    			
					default:	dato = dato;
							bandera1 = 0;
 270:	34 05 00 00 	mvi r5,0
 274:	e3 ff ff af 	bi 130 <key_read+0xa4>
							break;
				}
				break;
    			case 2: write_fila(2);
 278:	34 01 00 02 	mvi r1,2
 27c:	f8 00 00 e8 	calli 61c <write_fila>
				case2 = read_columna();
 280:	f8 00 00 e0 	calli 600 <read_columna>
				switch (case2){
 284:	44 2b 00 31 	be r1,r11,348 <key_read+0x2bc>
 288:	44 33 00 29 	be r1,r19,32c <key_read+0x2a0>
 28c:	44 34 00 44 	be r1,r20,39c <key_read+0x310>
			    		case 2: dato = 5;
						bandera2 = 1;
						break;
		    			case 4:	dato = 6;
						bandera2 = 1;
						break;
 290:	21 86 00 ff 	andi r6,r12,0xff
			    		
					default:	dato = dato;
							bandera2 = 0;
							break;
 294:	b9 a0 20 00 	mv r4,r13
 298:	b9 e0 18 00 	mv r3,r15
 29c:	b9 80 28 00 	mv r5,r12
		    			case 4:	dato = 6;
						bandera2 = 1;
						break;
			    		
					default:	dato = dato;
							bandera2 = 0;
 2a0:	34 02 00 00 	mvi r2,0
							break;
 2a4:	e3 ff ff a0 	bi 124 <key_read+0x98>
				}
				break;
	    		case 3:	write_fila(4);
 2a8:	34 01 00 04 	mvi r1,4
 2ac:	f8 00 00 dc 	calli 61c <write_fila>
				case2 = read_columna();
 2b0:	f8 00 00 d4 	calli 600 <read_columna>
				switch (case2){
 2b4:	44 30 00 4f 	be r1,r16,3f0 <key_read+0x364>
 2b8:	44 33 00 47 	be r1,r19,3d4 <key_read+0x348>
 2bc:	44 34 00 3f 	be r1,r20,3b8 <key_read+0x32c>
		    			case 2: dato = 8;
						bandera3 = 1;
						break;
			    		case 4:	dato = 9;
						bandera3 = 1;
						break;
 2c0:	21 86 00 ff 	andi r6,r12,0xff
		    			
					default:	dato = dato;
							bandera3 = 0;
							break;
 2c4:	b9 a0 20 00 	mv r4,r13
 2c8:	b9 c0 10 00 	mv r2,r14
 2cc:	b9 80 28 00 	mv r5,r12
			    		case 4:	dato = 9;
						bandera3 = 1;
						break;
		    			
					default:	dato = dato;
							bandera3 = 0;
 2d0:	34 03 00 00 	mvi r3,0
							break;
 2d4:	e3 ff ff 94 	bi 124 <key_read+0x98>
		temp8 = bandera4;

 if ((temp1 == 0 && temp5 == 0)||(temp1 == 1 && temp5 == 1)||(temp2 == 0 && temp6 == 0)||(temp2 == 1 && temp6 == 1)||(temp3 == 0 && temp7 == 0)||(temp3 == 1 && temp7 == 1)||(temp4 == 0 && temp8 == 0)||(temp4 == 1 && temp8 == 1)){

                                                                                        }
   if((temp1 == 0 && temp5 == 1)||(temp2 == 0 && temp6 == 1)||(temp3 == 0 && temp7 == 1)||(temp4 == 0 && temp8 == 1)){
 2d8:	34 03 00 01 	mvi r3,1
 2dc:	b8 80 68 00 	mv r13,r4
 2e0:	b8 60 78 00 	mv r15,r3
 2e4:	b8 40 70 00 	mv r14,r2
 2e8:	b8 a0 60 00 	mv r12,r5
 2ec:	ba 40 a8 00 	mv r21,r18
 2f0:	34 11 00 01 	mvi r17,1
 2f4:	e3 ff ff ba 	bi 1dc <key_read+0x150>
							break;
				}
				break;
    			case 4:	write_fila(8);
				case2 = read_columna();
				switch (case2){
 2f8:	21 86 00 ff 	andi r6,r12,0xff
						bandera4 = 1;
						break;
			    		
					default:	dato = dato;
							bandera4 = 0;
							break;
 2fc:	b9 e0 18 00 	mv r3,r15
 300:	b9 c0 10 00 	mv r2,r14
 304:	b9 80 28 00 	mv r5,r12
		    			case 4:	dato = 0;
						bandera4 = 1;
						break;
			    		
					default:	dato = dato;
							bandera4 = 0;
 308:	34 04 00 00 	mvi r4,0
							break;
 30c:	e3 ff ff 86 	bi 124 <key_read+0x98>
		temp4 = bandera4;
		
		switch (case1){
    			case 1:	write_fila(1);
				case2 = read_columna();
				switch (case2){
 310:	b9 a0 20 00 	mv r4,r13
 314:	b9 e0 18 00 	mv r3,r15
 318:	b9 c0 10 00 	mv r2,r14
 31c:	34 06 00 01 	mvi r6,1
	   				case 1:	dato = 1;
						bandera1 = 1;
 320:	34 05 00 01 	mvi r5,1
		
		switch (case1){
    			case 1:	write_fila(1);
				case2 = read_columna();
				switch (case2){
	   				case 1:	dato = 1;
 324:	34 12 00 01 	mvi r18,1
 328:	e3 ff ff 7f 	bi 124 <key_read+0x98>
	    				case 1:	dato = 4;
						bandera2 = 1;
						break;
			    		case 2: dato = 5;
						bandera2 = 1;
						break;
 32c:	21 86 00 ff 	andi r6,r12,0xff
		    			case 4:	dato = 6;
						bandera2 = 1;
						break;
 330:	b9 a0 20 00 	mv r4,r13
 334:	b9 e0 18 00 	mv r3,r15
 338:	b9 80 28 00 	mv r5,r12
						break;
			    		case 2: dato = 5;
						bandera2 = 1;
						break;
		    			case 4:	dato = 6;
						bandera2 = 1;
 33c:	34 02 00 01 	mvi r2,1
						bandera2 = 1;
						break;
			    		case 2: dato = 5;
						bandera2 = 1;
						break;
		    			case 4:	dato = 6;
 340:	34 12 00 06 	mvi r18,6
						bandera2 = 1;
						break;
 344:	e3 ff ff 78 	bi 124 <key_read+0x98>
							break;
				}
				break;
    			case 2: write_fila(2);
				case2 = read_columna();
				switch (case2){
 348:	21 86 00 ff 	andi r6,r12,0xff
	    				case 1:	dato = 4;
						bandera2 = 1;
						break;
			    		case 2: dato = 5;
						bandera2 = 1;
						break;
 34c:	b9 a0 20 00 	mv r4,r13
 350:	b9 e0 18 00 	mv r3,r15
 354:	b9 80 28 00 	mv r5,r12
				switch (case2){
	    				case 1:	dato = 4;
						bandera2 = 1;
						break;
			    		case 2: dato = 5;
						bandera2 = 1;
 358:	34 02 00 01 	mvi r2,1
				case2 = read_columna();
				switch (case2){
	    				case 1:	dato = 4;
						bandera2 = 1;
						break;
			    		case 2: dato = 5;
 35c:	34 12 00 05 	mvi r18,5
						bandera2 = 1;
						break;
 360:	e3 ff ff 71 	bi 124 <key_read+0x98>
		    			case 2: dato = 2;
						bandera1 = 1;
						break;
			    		case 4:	dato = 3;
						bandera1 = 1;
						break;
 364:	b9 a0 20 00 	mv r4,r13
 368:	b9 e0 18 00 	mv r3,r15
 36c:	b9 c0 10 00 	mv r2,r14
 370:	34 06 00 01 	mvi r6,1
						break;
		    			case 2: dato = 2;
						bandera1 = 1;
						break;
			    		case 4:	dato = 3;
						bandera1 = 1;
 374:	34 05 00 01 	mvi r5,1
						bandera1 = 1;
						break;
		    			case 2: dato = 2;
						bandera1 = 1;
						break;
			    		case 4:	dato = 3;
 378:	34 12 00 03 	mvi r18,3
						bandera1 = 1;
						break;
 37c:	e3 ff ff 6a 	bi 124 <key_read+0x98>
		temp4 = bandera4;
		
		switch (case1){
    			case 1:	write_fila(1);
				case2 = read_columna();
				switch (case2){
 380:	b9 a0 20 00 	mv r4,r13
 384:	b9 e0 18 00 	mv r3,r15
 388:	b9 c0 10 00 	mv r2,r14
 38c:	34 06 00 01 	mvi r6,1
	   				case 1:	dato = 1;
						bandera1 = 1;
						break;
		    			case 2: dato = 2;
						bandera1 = 1;
 390:	34 05 00 01 	mvi r5,1
				case2 = read_columna();
				switch (case2){
	   				case 1:	dato = 1;
						bandera1 = 1;
						break;
		    			case 2: dato = 2;
 394:	34 12 00 02 	mvi r18,2
 398:	e3 ff ff 63 	bi 124 <key_read+0x98>
							break;
				}
				break;
    			case 2: write_fila(2);
				case2 = read_columna();
				switch (case2){
 39c:	21 86 00 ff 	andi r6,r12,0xff
 3a0:	b9 a0 20 00 	mv r4,r13
 3a4:	b9 e0 18 00 	mv r3,r15
 3a8:	b9 80 28 00 	mv r5,r12
	    				case 1:	dato = 4;
						bandera2 = 1;
 3ac:	34 02 00 01 	mvi r2,1
				}
				break;
    			case 2: write_fila(2);
				case2 = read_columna();
				switch (case2){
	    				case 1:	dato = 4;
 3b0:	34 12 00 04 	mvi r18,4
 3b4:	e3 ff ff 5c 	bi 124 <key_read+0x98>
							break;
				}
				break;
	    		case 3:	write_fila(4);
				case2 = read_columna();
				switch (case2){
 3b8:	21 86 00 ff 	andi r6,r12,0xff
 3bc:	b9 a0 20 00 	mv r4,r13
 3c0:	b9 c0 10 00 	mv r2,r14
 3c4:	b9 80 28 00 	mv r5,r12
	    				case 1:	dato = 7;
						bandera3 = 1;
 3c8:	34 03 00 01 	mvi r3,1
				}
				break;
	    		case 3:	write_fila(4);
				case2 = read_columna();
				switch (case2){
	    				case 1:	dato = 7;
 3cc:	34 12 00 07 	mvi r18,7
 3d0:	e3 ff ff 55 	bi 124 <key_read+0x98>
						bandera3 = 1;
						break;
		    			case 2: dato = 8;
						bandera3 = 1;
						break;
 3d4:	21 86 00 ff 	andi r6,r12,0xff
			    		case 4:	dato = 9;
						bandera3 = 1;
						break;
 3d8:	b9 a0 20 00 	mv r4,r13
 3dc:	b9 c0 10 00 	mv r2,r14
 3e0:	b9 80 28 00 	mv r5,r12
						break;
		    			case 2: dato = 8;
						bandera3 = 1;
						break;
			    		case 4:	dato = 9;
						bandera3 = 1;
 3e4:	34 03 00 01 	mvi r3,1
						bandera3 = 1;
						break;
		    			case 2: dato = 8;
						bandera3 = 1;
						break;
			    		case 4:	dato = 9;
 3e8:	34 12 00 09 	mvi r18,9
						bandera3 = 1;
						break;
 3ec:	e3 ff ff 4e 	bi 124 <key_read+0x98>
							break;
				}
				break;
	    		case 3:	write_fila(4);
				case2 = read_columna();
				switch (case2){
 3f0:	21 86 00 ff 	andi r6,r12,0xff
	    				case 1:	dato = 7;
						bandera3 = 1;
						break;
		    			case 2: dato = 8;
						bandera3 = 1;
						break;
 3f4:	b9 a0 20 00 	mv r4,r13
 3f8:	b9 c0 10 00 	mv r2,r14
 3fc:	b9 80 28 00 	mv r5,r12
				switch (case2){
	    				case 1:	dato = 7;
						bandera3 = 1;
						break;
		    			case 2: dato = 8;
						bandera3 = 1;
 400:	34 03 00 01 	mvi r3,1
				case2 = read_columna();
				switch (case2){
	    				case 1:	dato = 7;
						bandera3 = 1;
						break;
		    			case 2: dato = 8;
 404:	34 12 00 08 	mvi r18,8
						bandera3 = 1;
						break;
 408:	e3 ff ff 47 	bi 124 <key_read+0x98>

0000040c <pintar_numero_key>:
		case1 = case1 + 1;
	}
	return clave;
}

void pintar_numero_key(uint32_t clave){
 40c:	37 9c ff f8 	addi sp,sp,-8
 410:	5b 8b 00 08 	sw (sp+8),r11
 414:	5b 9d 00 04 	sw (sp+4),ra

	uint32_t num1=0;

	num1=clave;		

	uart_putstr("\r\n");
 418:	78 02 00 00 	mvhi r2,0x0
		case1 = case1 + 1;
	}
	return clave;
}

void pintar_numero_key(uint32_t clave){
 41c:	b8 20 58 00 	mv r11,r1

	uint32_t num1=0;

	num1=clave;		

	uart_putstr("\r\n");
 420:	b8 40 08 00 	mv r1,r2
 424:	38 21 07 08 	ori r1,r1,0x708
 428:	f8 00 00 ab 	calli 6d4 <uart_putstr>

	uart_putchar(num1+48);
 42c:	35 61 00 30 	addi r1,r11,48
 430:	20 21 00 ff 	andi r1,r1,0xff
 434:	f8 00 00 9f 	calli 6b0 <uart_putchar>
	
}
 438:	2b 9d 00 04 	lw ra,(sp+4)
 43c:	2b 8b 00 08 	lw r11,(sp+8)
 440:	37 9c 00 08 	addi sp,sp,8
 444:	c3 a0 00 00 	ret

00000448 <main>:



	

int main(int argc, char **argv){
 448:	37 9c ff c4 	addi sp,sp,-60
 44c:	5b 8b 00 3c 	sw (sp+60),r11
 450:	5b 8c 00 38 	sw (sp+56),r12
 454:	5b 8d 00 34 	sw (sp+52),r13
 458:	5b 8e 00 30 	sw (sp+48),r14
 45c:	5b 8f 00 2c 	sw (sp+44),r15
 460:	5b 90 00 28 	sw (sp+40),r16
 464:	5b 91 00 24 	sw (sp+36),r17
 468:	5b 92 00 20 	sw (sp+32),r18
 46c:	5b 93 00 1c 	sw (sp+28),r19
 470:	5b 94 00 18 	sw (sp+24),r20
 474:	5b 95 00 14 	sw (sp+20),r21
 478:	5b 96 00 10 	sw (sp+16),r22
 47c:	5b 97 00 0c 	sw (sp+12),r23
 480:	5b 98 00 08 	sw (sp+8),r24
 484:	5b 9d 00 04 	sw (sp+4),ra
 488:	78 14 00 00 	mvhi r20,0x0
 48c:	78 0b 00 00 	mvhi r11,0x0
 490:	78 13 00 00 	mvhi r19,0x0
 494:	78 12 00 00 	mvhi r18,0x0
 498:	78 11 00 00 	mvhi r17,0x0
 49c:	78 10 00 00 	mvhi r16,0x0
 4a0:	78 0f 00 00 	mvhi r15,0x0
 4a4:	78 0e 00 00 	mvhi r14,0x0
 4a8:	78 18 00 00 	mvhi r24,0x0
 4ac:	78 17 00 00 	mvhi r23,0x0
 4b0:	78 0d 00 00 	mvhi r13,0x0
 4b4:	3a 94 07 0c 	ori r20,r20,0x70c
 4b8:	39 6b 07 48 	ori r11,r11,0x748
 4bc:	3a 73 07 84 	ori r19,r19,0x784
 4c0:	3a 52 07 c0 	ori r18,r18,0x7c0
 4c4:	3a 31 07 fc 	ori r17,r17,0x7fc
 4c8:	3a 10 08 18 	ori r16,r16,0x818
 4cc:	39 ef 08 30 	ori r15,r15,0x830
 4d0:	39 ce 08 48 	ori r14,r14,0x848
 4d4:	3b 18 08 64 	ori r24,r24,0x864
 4d8:	3a f7 08 88 	ori r23,r23,0x888
 4dc:	39 ad 08 ac 	ori r13,r13,0x8ac
	uart_putstr("\r\n2.Devolucion equipos\r");
	uart_putstr("\r\n3.Historial estudiante\r");
	select= key_read();

	pintar_numero_key(select);
	switch (select){
 4e0:	34 15 00 01 	mvi r21,1
 4e4:	34 16 00 02 	mvi r22,2
int main(int argc, char **argv){
uint32_t select=0;    

for(;;){

	uart_putstr("\r\n/////////////////////////////////////////////////////\r");
 4e8:	ba 80 08 00 	mv r1,r20
 4ec:	f8 00 00 7a 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n///                                               ///\r");
 4f0:	b9 60 08 00 	mv r1,r11
 4f4:	f8 00 00 78 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n///   Sistema Prestamo de Equipos UNAl            ///\r");
 4f8:	ba 60 08 00 	mv r1,r19
 4fc:	f8 00 00 76 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n///                                               ///\r");
 500:	b9 60 08 00 	mv r1,r11
 504:	f8 00 00 74 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n/////////////////////////////////////////////////////\r\n\n");
 508:	ba 40 08 00 	mv r1,r18
 50c:	f8 00 00 72 	calli 6d4 <uart_putstr>
	uart_putstr("\r\nSeleccione una opcion\r");
 510:	ba 20 08 00 	mv r1,r17
 514:	f8 00 00 70 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n1.Prestar equipos\r");
 518:	ba 00 08 00 	mv r1,r16
 51c:	f8 00 00 6e 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n2.Devolucion equipos\r");
 520:	b9 e0 08 00 	mv r1,r15
 524:	f8 00 00 6c 	calli 6d4 <uart_putstr>
	uart_putstr("\r\n3.Historial estudiante\r");
 528:	b9 c0 08 00 	mv r1,r14
 52c:	f8 00 00 6a 	calli 6d4 <uart_putstr>
	select= key_read();
 530:	fb ff fe d7 	calli 8c <key_read>
 534:	b8 20 60 00 	mv r12,r1

	pintar_numero_key(select);
 538:	fb ff ff b5 	calli 40c <pintar_numero_key>
               uart_putstr("\r\nPase el carnet por el lector.\r\n\n"); 		
               break;  
               case 2: 
               uart_putstr("\r\n  Leer equipos a devolver  \r\n\n");        
	       	break; 
                default:   uart_putstr("\r\n  Leer equipos  \r\n\n");  	
 53c:	b9 a0 08 00 	mv r1,r13
	uart_putstr("\r\n2.Devolucion equipos\r");
	uart_putstr("\r\n3.Historial estudiante\r");
	select= key_read();

	pintar_numero_key(select);
	switch (select){
 540:	45 95 00 04 	be r12,r21,550 <main+0x108>
 544:	45 96 00 06 	be r12,r22,55c <main+0x114>
               uart_putstr("\r\nPase el carnet por el lector.\r\n\n"); 		
               break;  
               case 2: 
               uart_putstr("\r\n  Leer equipos a devolver  \r\n\n");        
	       	break; 
                default:   uart_putstr("\r\n  Leer equipos  \r\n\n");  	
 548:	f8 00 00 63 	calli 6d4 <uart_putstr>
 54c:	e3 ff ff e7 	bi 4e8 <main+0xa0>
	select= key_read();

	pintar_numero_key(select);
	switch (select){
               	case 1:                                        
               uart_putstr("\r\nPase el carnet por el lector.\r\n\n"); 		
 550:	bb 00 08 00 	mv r1,r24
 554:	f8 00 00 60 	calli 6d4 <uart_putstr>
               break;  
 558:	e3 ff ff e4 	bi 4e8 <main+0xa0>
               case 2: 
               uart_putstr("\r\n  Leer equipos a devolver  \r\n\n");        
 55c:	ba e0 08 00 	mv r1,r23
 560:	f8 00 00 5d 	calli 6d4 <uart_putstr>
	       	break; 
 564:	e3 ff ff e1 	bi 4e8 <main+0xa0>

00000568 <sleep>:
void sleep(int msec){

	uint32_t tcr;

	// Use timer0.1      
	timer0->compare1 = (100000*msec);
 568:	78 04 00 00 	mvhi r4,0x0
 56c:	38 84 08 c4 	ori r4,r4,0x8c4
 570:	28 83 00 00 	lw r3,(r4+0)
 574:	78 02 00 00 	mvhi r2,0x0
 578:	38 42 08 cc 	ori r2,r2,0x8cc
 57c:	28 42 00 00 	lw r2,(r2+0)
 580:	88 23 08 00 	mul r1,r1,r3
 584:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 588:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN | TIMER_IRQEN;
 58c:	34 01 00 0a 	mvi r1,10
 590:	58 41 00 0c 	sw (r2+12),r1

	do {
		//halt();
 		tcr = timer0->tcr1;
 594:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 598:	20 21 00 01 	andi r1,r1,0x1
 59c:	44 20 ff fe 	be r1,r0,594 <sleep+0x2c>
}
 5a0:	c3 a0 00 00 	ret

000005a4 <nsleep>:
void nsleep(uint32_t nsec){

	uint32_t tcr;

	// Use timer0.1
	timer0->compare1 = (nsec/10);
 5a4:	78 02 00 00 	mvhi r2,0x0
 5a8:	38 42 08 cc 	ori r2,r2,0x8cc
 5ac:	28 42 00 00 	lw r2,(r2+0)
 5b0:	34 03 00 0a 	mvi r3,10
 5b4:	8c 23 08 00 	divu r1,r1,r3
 5b8:	58 41 00 10 	sw (r2+16),r1
	timer0->counter1 = 0;
 5bc:	58 40 00 14 	sw (r2+20),r0
	timer0->tcr1 = TIMER_EN | TIMER_IRQEN;
 5c0:	58 43 00 0c 	sw (r2+12),r3

	do {
		//halt();
 		tcr = timer0->tcr1;
 5c4:	28 41 00 0c 	lw r1,(r2+12)
 	} while ( ! (tcr & TIMER_TRIG) );
 5c8:	20 21 00 01 	andi r1,r1,0x1
 5cc:	44 20 ff fe 	be r1,r0,5c4 <nsleep+0x20>
}
 5d0:	c3 a0 00 00 	ret

000005d4 <tic_init>:

void tic_init()
{
	// Setup timer0.0
	timer0->compare0 = (FCPU/1000);
 5d4:	78 01 00 00 	mvhi r1,0x0
 5d8:	78 03 00 00 	mvhi r3,0x0
 5dc:	38 21 08 cc 	ori r1,r1,0x8cc
 5e0:	38 63 08 c4 	ori r3,r3,0x8c4
 5e4:	28 21 00 00 	lw r1,(r1+0)
 5e8:	28 62 00 00 	lw r2,(r3+0)
 5ec:	58 22 00 04 	sw (r1+4),r2
	timer0->counter0 = 0;
 5f0:	58 20 00 08 	sw (r1+8),r0
	timer0->tcr0     = TIMER_EN | TIMER_AR | TIMER_IRQEN;
 5f4:	34 02 00 0e 	mvi r2,14
 5f8:	58 22 00 00 	sw (r1+0),r2
}
 5fc:	c3 a0 00 00 	ret

00000600 <read_columna>:
/***************************************************************************
 * GPIO 0 Functions
 */

int read_columna(){
	gpio0->ctrl = 0x10;
 600:	78 01 00 00 	mvhi r1,0x0
 604:	38 21 08 d0 	ori r1,r1,0x8d0
 608:	28 21 00 00 	lw r1,(r1+0)
 60c:	34 02 00 10 	mvi r2,16
 610:	58 22 00 00 	sw (r1+0),r2
	return gpio0->in;
 614:	28 21 00 10 	lw r1,(r1+16)
}
 618:	c3 a0 00 00 	ret

0000061c <write_fila>:

void write_fila(int code){
	gpio0->ctrl = 0x14;
 61c:	78 02 00 00 	mvhi r2,0x0
 620:	38 42 08 d0 	ori r2,r2,0x8d0
 624:	28 42 00 00 	lw r2,(r2+0)
 628:	34 03 00 14 	mvi r3,20
 62c:	58 43 00 00 	sw (r2+0),r3
	gpio0->out = code;
 630:	58 41 00 14 	sw (r2+20),r1
}
 634:	c3 a0 00 00 	ret

00000638 <write_buzzer>:

void write_buzzer(int signal){
	gpio0->ctrl = 0x18;
 638:	78 02 00 00 	mvhi r2,0x0
 63c:	38 42 08 d0 	ori r2,r2,0x8d0
 640:	28 42 00 00 	lw r2,(r2+0)
 644:	34 03 00 18 	mvi r3,24
 648:	58 43 00 00 	sw (r2+0),r3
	gpio0->oe = signal;
 64c:	58 41 00 18 	sw (r2+24),r1
}
 650:	c3 a0 00 00 	ret

00000654 <scan_code_ps2>:
 * PS2 Functions
 */

int scan_code_ps2(){

	ps20->ctrl = 0x10;
 654:	78 01 00 00 	mvhi r1,0x0
 658:	38 21 08 d4 	ori r1,r1,0x8d4
 65c:	28 21 00 00 	lw r1,(r1+0)
 660:	34 02 00 10 	mvi r2,16
 664:	58 22 00 00 	sw (r1+0),r2
	return ps20->scancode;
 668:	28 21 00 10 	lw r1,(r1+16)
}
 66c:	c3 a0 00 00 	ret

00000670 <uart_init>:
	//uart0->lcr = 0x03;  // Line Control Register:    8N1
	//uart0->mcr = 0x00;  // Modem Control Register

	// Setup Divisor register (Fclk / Baud)
	//uart0->div = (FCPU/(57600*16));
}
 670:	c3 a0 00 00 	ret

00000674 <uart_read>:

char uart_read()
{   
	return uart0->rxtx;
 674:	78 01 00 00 	mvhi r1,0x0
 678:	38 21 08 c8 	ori r1,r1,0x8c8
 67c:	28 21 00 00 	lw r1,(r1+0)
 680:	28 21 00 04 	lw r1,(r1+4)
}
 684:	20 21 00 ff 	andi r1,r1,0xff
 688:	c3 a0 00 00 	ret

0000068c <uart_getchar>:
char uart_getchar()
{   
 68c:	78 01 00 00 	mvhi r1,0x0
 690:	38 21 08 c8 	ori r1,r1,0x8c8
 694:	28 22 00 00 	lw r2,(r1+0)
	while (! (uart0->ucr & UART_DR)) ;
 698:	28 41 00 00 	lw r1,(r2+0)
 69c:	20 21 00 01 	andi r1,r1,0x1
 6a0:	44 20 ff fe 	be r1,r0,698 <uart_getchar+0xc>
	return uart0->rxtx;
 6a4:	28 41 00 04 	lw r1,(r2+4)
}
 6a8:	20 21 00 ff 	andi r1,r1,0xff
 6ac:	c3 a0 00 00 	ret

000006b0 <uart_putchar>:

void uart_putchar(char c)
{
 6b0:	78 02 00 00 	mvhi r2,0x0
 6b4:	38 42 08 c8 	ori r2,r2,0x8c8
 6b8:	28 43 00 00 	lw r3,(r2+0)
 6bc:	20 21 00 ff 	andi r1,r1,0xff
	while (uart0->ucr & UART_BUSY) ;
 6c0:	28 62 00 00 	lw r2,(r3+0)
 6c4:	20 42 00 10 	andi r2,r2,0x10
 6c8:	5c 40 ff fe 	bne r2,r0,6c0 <uart_putchar+0x10>
	uart0->rxtx = c;
 6cc:	58 61 00 04 	sw (r3+4),r1
}
 6d0:	c3 a0 00 00 	ret

000006d4 <uart_putstr>:

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
 6d4:	40 24 00 00 	lbu r4,(r1+0)
 6d8:	44 80 00 0b 	be r4,r0,704 <uart_putstr+0x30>
 6dc:	78 02 00 00 	mvhi r2,0x0
 6e0:	38 42 08 c8 	ori r2,r2,0x8c8
 6e4:	28 43 00 00 	lw r3,(r2+0)
	return uart0->rxtx;
}

void uart_putchar(char c)
{
	while (uart0->ucr & UART_BUSY) ;
 6e8:	28 62 00 00 	lw r2,(r3+0)
 6ec:	20 42 00 10 	andi r2,r2,0x10
 6f0:	5c 40 ff fe 	bne r2,r0,6e8 <uart_putstr+0x14>
	uart0->rxtx = c;
 6f4:	58 64 00 04 	sw (r3+4),r4
void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
		uart_putchar(*c);
		c++;
 6f8:	34 21 00 01 	addi r1,r1,1
}

void uart_putstr(char *str)
{
	char *c = str;
	while(*c) {
 6fc:	40 24 00 00 	lbu r4,(r1+0)
 700:	5c 82 ff fa 	bne r4,r2,6e8 <uart_putstr+0x14>
 704:	c3 a0 00 00 	ret
